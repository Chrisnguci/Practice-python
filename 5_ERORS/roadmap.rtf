{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red34\green35\blue37;\red87\green92\blue96;}
{\*\expandedcolortbl;;\cssrgb\c17647\c18431\c19216;\cssrgb\c41569\c43529\c45098;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl120\slmult1\partightenfactor0
\ls1\ilvl0
\f0\fs28 \cf2 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Code samples for this section\uc0\u8232 \u8232 \u8232 \cf3 \strokec3 00:13\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Intro to errors in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 13:13\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Built in errors in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 17:58\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Errors in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 3 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Raising errors in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 10:58\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Exercise: raising an error (Python 3.10)\u8232 \u8232 \u8232 \cf3 \strokec3 1 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Solution: raising an error\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 00:27\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Creating our own errors in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 13:42\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Exercise: raising our own custom errors (Python 3.10)\u8232 \u8232 \u8232 \cf3 \strokec3 1 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Solution: raising our own custom errors\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 00:33\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Dealing with Python errors\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 09:00\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Error handling in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 3 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 The on success block and re-raising exceptions\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 11:21\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Some error problems\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 6 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Handling those pesky user errors!\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 11:18\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Exercise: try-except-finally (Python 3.10)\u8232 \u8232 \u8232 \cf3 \strokec3 1 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Solution: try-except-finally\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 00:32\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Debugging with Pycharm\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 16:37\uc0\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Advanced error handling in Python\u8232 \u8232 \u8232 \u8232 \cf3 \strokec3 4 c\'e2u h\uc0\u7887 i\u8232 \cf2 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 Further reading\u8232 \u8232 \u8232 \cf3 \strokec3 00:28\uc0\u8232 \cf2 \strokec2 \
}